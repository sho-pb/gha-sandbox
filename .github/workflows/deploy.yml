name: Prepare Deploy

on:
  workflow_dispatch:
    inputs:
      commitHash:
        required: true
      target:
        required: true
        default: 'main'

permissions:
  contents: write
  pull-requests: write

jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Trim and shorten commitHash, set env vars
        run: |
          trimmed=$(echo '${{ inputs.commitHash }}' | xargs)
          short=${trimmed:0:7}
          echo "TRIMMED_COMMIT_HASH=$trimmed" >> $GITHUB_ENV
          echo "SHORT_COMMIT_HASH=$short" >> $GITHUB_ENV
          echo "BRANCH_NAME=deploy/$short" >> $GITHUB_ENV

      - name: Create deploy branch and push
        run: |
          git switch --create "$BRANCH_NAME" "$TRIMMED_COMMIT_HASH"
          git push origin -f "$BRANCH_NAME"

      - name: Generate release notes using GitHub API
        id: release_notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/releases/generate-notes \
            -f tag_name="$TRIMMED_COMMIT_HASH" \
            -f target_commitish="$TRIMMED_COMMIT_HASH" \
            > generated_notes.json

          jq -r '.body' generated_notes.json > pr_body_raw.txt

          awk '{
            if (match($0, /\* .* in (https:\/\/github\.com\/[^ )]+)/, m)) {
              print "* " m[1];
            } else {
              print $0;
            }
          }' pr_body_raw.txt > pr_body_processed.txt

          {
            echo '## デプロイ手順書'
            echo ''
            echo '- <https://github.com>'
            echo ''
            cat pr_body_processed.txt
          } > pr_body.txt

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "$BRANCH_NAME" \
            --body-file pr_body.txt \
            --base ${{ inputs.target }} \
            --head "$BRANCH_NAME"

      - name: Add 'release' label to PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL=$(gh pr view "$BRANCH_NAME" --json url -q .url)
          gh pr edit "$PR_URL" --add-label "release"
