name: Prepare Deploy

on:
  workflow_dispatch:
    inputs:
      commitHash:
        required: false
      target:
        required: true
        default: 'main'

permissions:
  contents: write
  pull-requests: write

jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Trim and shorten commitHash, set env vars
        run: |
          if [ -z "${{ inputs.commitHash }}" ]; then
            trimmed=$(git rev-parse HEAD)
          else
            trimmed=$(echo '${{ inputs.commitHash }}' | xargs)
          fi
          short=${trimmed:0:7}
          echo "TRIMMED_COMMIT_HASH=$trimmed" >> $GITHUB_ENV
          echo "SHORT_COMMIT_HASH=$short" >> $GITHUB_ENV
          echo "BRANCH_NAME=deploy/$short" >> $GITHUB_ENV

      - name: Create deploy branch and push
        run: |
          git switch --create "$BRANCH_NAME" "$TRIMMED_COMMIT_HASH"
          git push origin -f "$BRANCH_NAME"

      - name: Get latest tag
        id: latest_tag
        run: |
          tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "LATEST_TAG=$tag" >> $GITHUB_ENV

      - name: Generate release notes using GitHub API
        id: release_notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TRIMMED_COMMIT_HASH: ${{ env.TRIMMED_COMMIT_HASH }}
          LATEST_TAG: ${{ env.LATEST_TAG }}
        run: node scripts/generate-notes.cjs

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "deploy: $SHORT_COMMIT_HASH" \
            --body-file pr_body.txt \
            --base ${{ inputs.target }} \
            --head "$BRANCH_NAME"

      - name: Add 'release' label to PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL=$(gh pr view "$BRANCH_NAME" --json url -q .url)
          gh pr edit "$PR_URL" --add-label "release"
